diff --git "a/cal_ad9361.c" "b/cal_ad9361.c"
index 039d850..10c5fe1 100644
--- "a/cal_ad9361.c"
+++ "b/cal_ad9361.c"
@@ -291,7 +291,7 @@ static bool iio_set_attribute(char * device, char * channel, bool in_out,
 
 }
 
-static double win_hanning(int j, int n)
+static float win_hanning(int j, int n)
 {
 	double a = 2.0 * M_PI / (n - 1), w;
 	w = 0.5 * (1.0 - cos(a * j));
@@ -341,8 +341,8 @@ int main(int argc, char **argv)
 	int timeout = -1;
 	bool scan_for_context = false, save_data = false;
 	char buf[256];
-	fftw_complex *in_c, *out;
-	fftw_plan plan_forward;
+	fftwf_complex *in_c, *out;
+	fftwf_plan plan_forward;
 	double *win, exact_rx_lo, mult_fs, mult_lo;
 	struct iio_channel *rx_i;
 	FILE * fd = NULL;
@@ -550,10 +550,10 @@ int main(int argc, char **argv)
 		return EXIT_FAILURE;
 	}
 
-	win = fftw_malloc(sizeof(double) * buffer_size);
-	in_c = fftw_malloc(sizeof(fftw_complex) * buffer_size);
-	out = fftw_malloc(sizeof(fftw_complex) * (buffer_size + 1));
-	plan_forward = fftw_plan_dft_1d(buffer_size, in_c, out, FFTW_FORWARD, FFTW_ESTIMATE);
+	win = fftwf_malloc(sizeof(float) * buffer_size);
+	in_c = fftwf_malloc(sizeof(fftwf_complex) * buffer_size);
+	out = fftwf_malloc(sizeof(fftwf_complex) * (buffer_size + 1));
+	plan_forward = fftwf_plan_dft_1d(buffer_size, in_c, out, FFTW_FORWARD, FFTW_ESTIMATE);
 	for (i = 0; i < buffer_size; i ++)
 		win[i] = win_hanning(i, buffer_size);
 
@@ -589,7 +589,7 @@ int main(int argc, char **argv)
 				in_c[cnt] = (real * win[cnt] + I * imag * win[cnt]) / 2048;
 			}
 
-			fftw_execute(plan_forward);
+			fftwf_execute(plan_forward);
 
 			for (j = 0; j <= 2; j++) {
 				peak[j] = -FLT_MAX;

