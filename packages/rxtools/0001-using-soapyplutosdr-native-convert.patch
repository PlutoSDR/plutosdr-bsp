diff --git "a/src/rtl_sdr.c" "b/src/rtl_sdr.c"
index 81b22c7..cb4de44 100644
--- "a/src/rtl_sdr.c"
+++ "b/src/rtl_sdr.c"
@@ -96,7 +96,7 @@ int main(int argc, char **argv)
 	int sync_mode = 0;
 	int direct_sampling = 0;
 	FILE *file;
-	int16_t *buffer;
+	void *buffer;
 	uint8_t *buf8 = NULL;
 	float *fbuf = NULL; // assumed 32-bit
 	char *dev_query = "";
@@ -173,7 +173,7 @@ int main(int argc, char **argv)
 		out_block_size = DEFAULT_BUF_LENGTH;
 	}
 
-	buffer = malloc(out_block_size * SoapySDR_formatToSize(SOAPY_SDR_CS16));
+	buffer = malloc(out_block_size * SoapySDR_formatToSize(output_format));
 	if (output_format == SOAPY_SDR_CS8 || output_format == SOAPY_SDR_CU8) {
 		buf8 = malloc(out_block_size * SoapySDR_formatToSize(SOAPY_SDR_CS8));
 	} else if (output_format == SOAPY_SDR_CF32) {
@@ -182,14 +182,22 @@ int main(int argc, char **argv)
 
 	int tmp_stdout = suppress_stdout_start();
 	// TODO: allow choosing input format, see https://www.reddit.com/r/RTLSDR/comments/4tpxv7/rx_tools_commandline_sdr_tools_for_rtlsdr_bladerf/d5ohfse?context=3
-	r = verbose_device_search(dev_query, &dev, &stream, SOAPY_SDR_CS16);
+
+    if(output_format == SOAPY_SDR_CS8 || output_format == SOAPY_SDR_CU8){
+        r = verbose_device_search(dev_query, &dev, &stream, SOAPY_SDR_CS8);
+    }else if (output_format == SOAPY_SDR_CS16){
+        r = verbose_device_search(dev_query, &dev, &stream, SOAPY_SDR_CS16);
+    }else if(output_format == SOAPY_SDR_CF32){
+        r = verbose_device_search(dev_query, &dev, &stream, SOAPY_SDR_CF32);
+    }
+
 
 	if (r != 0) {
 		fprintf(stderr, "Failed to open sdr device matching '%s'.\n", dev_query);
 		exit(1);
 	}
 
-	fprintf(stderr, "Using output format: %s (input format %s)\n", output_format, SOAPY_SDR_CS16);
+	fprintf(stderr, "Using output format: %s (input format %s)\n", output_format, output_format);
 
 #ifndef _WIN32
 	sigact.sa_handler = sighandler;
@@ -283,26 +291,21 @@ int main(int argc, char **argv)
 					break;
 				}
 			} else if (output_format == SOAPY_SDR_CS8) {
-				for (i = 0; i < n_read; ++i) {
-					buf8[i] = ( (int16_t)buffer[i] / 32767.0 * 128.0 + 0.4);
-				}
-				if (fwrite(buf8, sizeof(uint8_t), n_read, file) != (size_t)n_read) {
+				if (fwrite(buffer, sizeof(int8_t), n_read, file) != (size_t)n_read) {
 					fprintf(stderr, "Short write, samples lost, exiting!\n");
 					break;
 				}
 			} else if (output_format == SOAPY_SDR_CU8) {
+                int8_t* ptr=(int8_t*)buffer;
 				for (i = 0; i < n_read; ++i) {
-					buf8[i] = ( (int16_t)buffer[i] / 32767.0 * 128.0 + 127.4);
+					buf8[i] = (ptr[i] + 127);
 				}
 				if (fwrite(buf8, sizeof(uint8_t), n_read, file) != (size_t)n_read) {
 					fprintf(stderr, "Short write, samples lost, exiting!\n");
 					break;
 				}
 			} else if (output_format == SOAPY_SDR_CF32) {
-				for (i = 0; i < n_read; ++i) {
-					fbuf[i] = buffer[i] * 1.0f / SHRT_MAX;
-				}
-				if (fwrite(fbuf, sizeof(float), n_read, file) != (size_t)n_read) {
+				if (fwrite(buffer, sizeof(float), n_read, file) != (size_t)n_read) {
 					fprintf(stderr, "Short write, samples lost, exiting!\n");
 					break;
 				}

